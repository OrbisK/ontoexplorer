stages:
  - fetch
  - build
  - test
  - deploy

image: node:latest

variables:
  GIT_DEPTH: 0
  
fetch:
  stage: fetch
  artifacts:
    untracked: true
    expire_in: 1 week
  script:
    - export NODE_OPTIONS=--openssl-legacy-provider
    - npm install -g typescript
    - npm ci


buildApp:
  stage: build
  needs:
    - job: fetch
      artifacts: true
  artifacts:
    paths:
      - dist/
    expire_in: 1 week
  script: 
    - export NODE_OPTIONS=--openssl-legacy-provider
    - npm run build


buildDocs:
  stage: build
  needs:
    - job: fetch       
      artifacts: true
  artifacts:
    paths:
      - docs/
    expire_in: 1 week  
  script:
    - export NODE_OPTIONS=--openssl-legacy-provider
    - npm install -g typedoc
    - npm run prebuild
    - typedoc src/tsdoc-index.ts --tsconfig ./doc_tsconfig.json


test:
  stage: test
  coverage: '/All files\s*\|\s*([0-9\.]+)/'
  needs:
    - job: fetch
      artifacts: true
    - job: buildApp
      artifacts: false
  script:
    - export NODE_OPTIONS=--openssl-legacy-provider
    - npm run test:unit
  artifacts:
    reports:
     cobertura: coverage/cobertura-coverage.xml


lint:
  stage: test
  needs:
    - job: fetch
      artifacts: true
    - job: buildApp
      artifacts: false  
  script:
    - export NODE_OPTIONS=--openssl-legacy-provider
    - npm run lint


deploy:
  before_script:
    - ( apt-get update -y && apt-get install sshpass -y )
  stage: deploy
  needs:
  - job: buildDocs
    artifacts: true
  - job: buildApp
    artifacts: true
  - job: test
    artifacts: false
  - job: lint
    artifacts: false
  script:
    - mv docs dist/docs
    - sshpass -p "$REMOTE_PASSWD" scp -o "StrictHostKeyChecking no" -r dist ontoexplorer@ontoexplorer.tk:/var/www/ontoexplorer_rc
  only:
    - release-candidate